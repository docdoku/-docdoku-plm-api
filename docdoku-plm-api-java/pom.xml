<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>docdoku-plm-api</artifactId>
        <groupId>com.docdoku.plm</groupId>
        <version>2.6.0-SNAPSHOT</version>
    </parent>
    
    <name>docdoku-plm DocDokuPLM Java API</name>
    <packaging>jar</packaging>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>docdoku-plm-api-java</artifactId>

    <dependencies>
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
        </dependency>

        <dependency>
            <groupId>com.docdoku.plm</groupId>
            <artifactId>docdoku-plm-api-base</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!-- HTTP client: jersey-client -->
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-common</artifactId>
        </dependency>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
        </dependency>

        <!-- JSON processing: jackson -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-joda</artifactId>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!-- An HTTP & HTTP/2 client for Android and Java applications -->
        <dependency>
            <groupId>com.squareup.okhttp</groupId>
            <artifactId>okhttp</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>

        <!-- Base64 encoding that works in both JVM and Android -->
        <dependency>
            <groupId>com.brsanthu</groupId>
            <artifactId>migbase64</artifactId>
        </dependency>

        <!-- test dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <properties>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.testTarget>1.8</maven.compiler.testTarget>
        <maven.compiler.testSource>1.8</maven.compiler.testSource>
    </properties>

    <build>
        <plugins>
            <!-- Sources directories -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.10</version>
                <executions>
                    <execution>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.basedir}/src/main/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Compile sources -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-compile</id>
                        <configuration>
                            <showDeprecation>true</showDeprecation>
                            <showWarnings>true</showWarnings>
                            <compilerArguments>
                                <source>${maven.compiler.target}</source>
                                <target>${maven.compiler.source}</target>
                            </compilerArguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-testCompile</id>
                        <configuration>
                            <showDeprecation>true</showDeprecation>
                            <showWarnings>true</showWarnings>
                            <compilerArguments>
                                <source>${maven.compiler.testTarget}</source>
                                <target>${maven.compiler.testSource}</target>
                            </compilerArguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.3.1</version>
                <executions>
                    <execution>
                        <id>enforce-java</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>${maven.compiler.testTarget}</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Unpack swagger.json from docdoku-api-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.2</version>
                <executions>
                    <execution>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.docdoku.plm</groupId>
                                    <artifactId>docdoku-plm-api-base</artifactId>
                                    <version>${project.version}</version>
                                    <classifier>json</classifier>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.build.directory}/swagger</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Generate java client sources -->
            <plugin>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-codegen-maven-plugin</artifactId>
                <version>2.1.5</version>
                <executions>
                    <execution>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.build.directory}/swagger/swagger.json</inputSpec>
                            <language>java</language>
                            <output>${project.build.directory}/generated-sources/swagger</output>
                            <apiPackage>com.docdoku.plm.api.services</apiPackage>
                            <invokerPackage>com.docdoku.plm.api.client</invokerPackage>
                            <modelPackage>com.docdoku.plm.api.models</modelPackage>
                            <configOptions>
                                <serializableModel>true</serializableModel>
                            </configOptions>
                            <library>okhttp-gson</library>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!-- Custom Jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <!-- JavaDoc -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.10.4</version>
                <configuration>
                    <groups>
                        <group>
                            <title>DocDokuPLM Java client API</title>
                            <packages>com.docdoku.plm:com.docdoku.plm.api.*</packages>
                        </group>
                        <group>
                            <title>DocDokuPLM Extension points API</title>
                            <packages>com.docdoku.plm:com.docdoku.plm.server.server.*</packages>
                        </group>
                        <group>
                            <title>DocDokuPLM core documentation</title>
                            <packages>com.docdoku.plm.server.core.*</packages>
                        </group>
                    </groups>
                    <sourcepath>
                        ${project.build.directory}/generated-sources/swagger/src/main/java/:${project.basedir}/src/main/java
                    </sourcepath>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- E2E Tests -->
    <profiles>
        <profile>
            <id>running-instance</id>
            <properties>
                <env.URL>http://localhost:8080/docdoku-plm-server-rest/api</env.URL>
                <env.LOGIN>test</env.LOGIN>
                <env.EMAIL>user@localhost</env.EMAIL>
                <env.NAME>test</env.NAME>
                <env.LANGUAGE>en</env.LANGUAGE>
                <env.PASSWORD>test</env.PASSWORD>
                <env.DEBUG>false</env.DEBUG>
                <env.TIMEZONE>CET</env.TIMEZONE>
                <env.ROOT_LOGIN>root</env.ROOT_LOGIN>
                <env.ROOT_PASSWORD>root</env.ROOT_PASSWORD>
            </properties>
            <build>
                <plugins>
                    <!-- Tests -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skipTests>true</skipTests>
                            <systemPropertyVariables>
                                <url>${env.URL}</url>
                                <login>${env.LOGIN}</login>
                                <email>${env.EMAIL}</email>
                                <name>${env.NAME}</name>
                                <language>${env.LANGUAGE}</language>
                                <password>${env.PASSWORD}</password>
                                <debug>${env.DEBUG}</debug>
                                <timezone>${env.TIMEZONE}</timezone>
                                <root_login>${env.ROOT_LOGIN}</root_login>
                                <root_password>${env.ROOT_PASSWORD}</root_password>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
